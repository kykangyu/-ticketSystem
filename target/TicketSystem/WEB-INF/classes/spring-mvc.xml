<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--1.开启Springioc 自动扫描注解包  只对mvc的包做扫描  -->
    <context:component-scan base-package="com.system.ticket.controller"/>
    <context:component-scan base-package="com.system.ticket.swagger"/>

    <bean id="utf8Charset" class="java.nio.charset.Charset"
          factory-method="forName">
        <constructor-arg value="UTF-8"/>
    </bean>

    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg ref="utf8Charset"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>


    <!--2. 开启注解，对jackson数据支持 -->
    <mvc:annotation-driven/>
    <mvc:default-servlet-handler/>

    <!--跨域访问-->
    <mvc:cors>
        <mvc:mapping path="/**" />
    </mvc:cors>


    <!--3.配置视图解析器  -->
    <!-- 配置视图解析器:如何把handle方法返回值解析为实际的物理视图
         name="prefix"代表前面的目录，为空代表根目录  name="suffix"代表返回的地址为后缀为.JSP的文件 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!--    <mvc:resources mapping="/" location="/"/>-->
    <!--<mvc:resources mapping="/jquery/**" location="/jquery/"/>
    <mvc:resources mapping="/js/**" location="/js/"/>
    <mvc:resources mapping="/layui/**" location="/layui/"/>
    <mvc:resources mapping="/css/**" location="/css/"/>
    <mvc:resources mapping="/img/**" location="/img/"/>-->


    <mvc:interceptors>
        <mvc:interceptor>
            <!-- /** 代表执行目录下所有内容都被拦截  -->
            <mvc:mapping path="/**" />
            <mvc:exclude-mapping path="/login.html"/>
            <mvc:exclude-mapping path="/loginIn"/>
            <!--            <mvc:mapping path="/jiChuShuJu/**" />-->
            <!--            <mvc:mapping path="/xiTongZhangHaoJueSe/**" />-->
            <!--            <mvc:mapping path="/geRenXinXi.html" />-->
            <!--            <mvc:mapping path="/index.html" />-->
            <!-- 这个类就是我们自定义的Interceptor -->
            <bean id="commonInterceptor" class="com.system.ticket.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法  -->
    </mvc:interceptors>
</beans>
